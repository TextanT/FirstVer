<?xml version="1.0" encoding="UTF-8"?>
<!-- mybatis map 선언 표시 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
              "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="com.besideYou.textant.manager.dao.ManagerDao">	
	
<!-- 	select out.*  -->
<!-- 		from (select rownum rum, in.*  -->
<!-- 			  from (select * from comments) in  -->
<!-- 			  where articleNum = #{articleNum}  -->
<!-- 			  order by rum) out  -->
<!-- 		where rum between 1 and #{commentRow} -->
	
<!-- 		SELECT * from reportComment order by writeDate desc -->
	<select id="getReportCommentList" parameterType="HashMap" resultType="reportComment">
		select outTable.* 
		from (
		select rownum rum, inTable.* 
			  from (
			  	select * 
			  	from reportComment 
			  	order by writeDate desc
			  	) inTable  
			  order by rum
			  ) outTable 
		where rum between #{startPage} and #{endPage}
	</select>
	<select id="getBadCommentList" resultType="comment">
	select outTable.* 
		from (
		select rownum rum, inTable.* 
			  from (
			  	select * 
			  	from comments 
			  	where commentBad > 10 
			  	order by writeDate desc
			  	) inTable  
			  order by rum
			  ) outTable 
		where rum between #{startPage} and #{endPage}
	</select>
	<select id="getReportBookList" resultType="reportBook">
	select outTable.* 
		from (
		select rownum rum, inTable.* 
			  from (
			  	select * 
			  	from reportBook
			  	order by writeDate desc
			  	) inTable  
			  order by rum
			  ) outTable 
		where rum between #{startPage} and #{endPage}
	</select>
	<select id="getNoticeList" resultType="notice">
	select outTable.* 
		from (
		select rownum rum, inTable.* 
			  from (
			  	select * 
			  	from notice
			  	order by writeDate desc
			  	) inTable  
			  order by rum
			  ) outTable 
		where rum between #{startPage} and #{endPage}
	</select>
	<select id="getRecommendedBookList" resultType="recommendedBook">
	select outTable.* 
		from (
		select rownum rum, inTable.* 
			  from (
			  	select * 
			  	from recommendedBook
			  	order by writeDate desc
			  	) inTable  
			  order by rum
			  ) outTable 
		where rum between #{startPage} and #{endPage}
	</select>
	
	<select id="getTotalRecommendBookCount" resultType="Integer">
	SELECT COUNT(*) FROM recommendedBook
	</select>
	
	<select id="getTotalReportBookCount" resultType="Integer">
	SELECT COUNT(*) FROM reportBook
	</select>
	
	<select id="getTotalReportCommentCount" resultType="Integer">
	SELECT COUNT(*) FROM reportComment
	</select>
	
	<select id="getUserName" parameterType="Integer" resultType="String">
	SELECT USERID FROM LOGIN WHERE USERNUM = #{userNum}
	</select>
	
	<select id="getBookName" parameterType="Integer" resultType="String">
	SELECT BOOKNAME FROM BOOKINFO WHERE BOOKARTICLENUM = #{bookArticleNum}
	</select>
	
	<select id="getRecommendedBookOne" parameterType="Integer" resultType="recommendedBook">
	SELECT * FROM recommendedBook WHERE recommendNum = #{num}
	</select>
	
	<insert id="writeRecommendbook" parameterType="recommendedBook">
	INSERT INTO RECOMMENDEDBOOK VALUES(RECOMMENDEDBOOK_SEQ.NEXTVAL,#{bookArticleNum},#{userNum},#{recommendComment},sysdate)
	</insert>
	<delete id="deleteRecommendBook" parameterType="Integer">
	DELETE FROM RECOMMENDEDBOOK WHERE RECOMMENDNUM = #{recommendNum}
	</delete>
	
	<select id="getManagingBookOne" parameterType="Integer" resultType="reportBook">
	SELECT * FROM reportBook WHERE reportBookNum = #{num}
	</select>
	<delete id="deleteReportBook" parameterType="Integer">
	DELETE FROM reportBook WHERE reportBookNum = #{reportBookNum}
	</delete>
	
	<select id="getUserGrade" parameterType="Integer" resultType="Integer">
	SELECT grade FROM LOGIN WHERE USERNUM = #{userNum}
	</select>
	<select id="getTotalNoticeCount" resultType="Integer">
	SELECT COUNT(*) FROM notice
	</select>
	<select id="getNoticeOne" parameterType="Integer" resultType="notice">
	SELECT * FROM notice WHERE articleNum = #{num}
	</select>
	<insert id="writeNotice" parameterType="notice">
	INSERT INTO NOTICE VALUES(NOTICE_SEQ.NEXTVAL,#{title},sysdate,#{userNum},0,#{type},#{contents})
	</insert>
	<delete id="deleteNotice" parameterType="Integer">
	DELETE FROM notice WHERE articleNum = #{articleNum}
	</delete>
	
	<update id="updateNotice" parameterType="notice">
    UPDATE NOTICE 
    SET TITLE=#{title}, USERNUM=#{userNum}, TYPE=#{type}, CONTENTS=#{contents}, WRITEDATE = sysdate
    WHERE ARTICLENUM=#{articleNum}
	</update>
	<update id="updateRecommendBook" parameterType="recommendedBook">
	UPDATE RECOMMENDEDBOOK 
	SET BOOKARTICLENUM=#{bookArticleNum}, USERNUM=#{userNum}, RECOMMENDCOMMENT=#{recommendComment}, WRITEDATE = sysdate
	WHERE RECOMMENDNUM = #{recommendNum}
	</update>
	
	<select id="getReportCommentOne" parameterType="Integer" resultType="reportComment">
	SELECT * FROM REPORTCOMMENT WHERE REPORTCOMMENTNUM = #{num}
	</select>
	
	
	<select id="getComments" parameterType="Integer" resultType="String">
	SELECT CONET FROM COMMENTS WHERE COMMENTNUM = #{commentNum}
	</select>
	
	<delete id="deleteReportComment" parameterType="Integer">
	DELETE FROM REPORTCOMMENT WHERE REPORTCOMMENTNUM = #{reportCommentNum}
	</delete>
	
	<select id="getTotalBadCommentsCount" resultType="Integer">
	SELECT COUNT(*) FROM COMMENTS WHERE COMMENTBAD > 10  
	</select>
	
	
	<select id="searchComment"  parameterType="HashMap" resultType="comment">
	select outTable.* 
		from (
		select rownum rum, inTable.* 
			  from (
	SELECT * FROM COMMENTS WHERE 
		<if test='searchType=="bad"'>
			COMMENTBAD >= #{commentContents} order by commentBad desc
		</if>
		<if test='searchType=="contents"'>
			CONET LIKE '%'||#{commentContents}||'%' order by writeDate desc
		</if>
		<if test='searchType=="userName"'>
			USERNUM LIKE '%'||#{commentContents}||'%' order by writeDate desc
		</if>
		<if test='searchType=="bookNum"'>
			BOOKARTICLENUM = #{commentContents} order by writeDate desc
			</if>
			) inTable  
			  order by rum
			  ) outTable 
		where rum between #{startPage} and #{endPage}
	</select>
	
	<select id="getTotalCommentsCount"  parameterType="HashMap" resultType="Integer">
	SELECT COUNT(*) FROM COMMENTS WHERE 
		<if test='searchType=="bad"'>
			COMMENTBAD >= #{commentContents}
		</if>
		<if test='searchType=="contents"'>
			CONET LIKE '%'||#{commentContents}||'%'
		</if>
		<if test='searchType=="userName"'>
			USERNUM LIKE '%'||#{commentContents}||'%'
		</if>
		<if test='searchType=="bookNum"'>
			BOOKARTICLENUM = #{commentContents}
			</if>
	</select>
	
	<select id="getCommentOne" parameterType="Integer" resultType="comment">
	SELECT * FROM COMMENTS WHERE COMMENTNUM = #{num}
	</select>
	
	<delete id="deleteComment" parameterType="Integer">
	DELETE FROM COMMENTS WHERE COMMENTNUM = #{commentNum}
	</delete>
	
	<select id="getAllBookCount" resultType="Integer">
	SELECT COUNT(*) FROM bookInfo 
	</select>
	
	<select id="getAllBooks" parameterType="HashMap" resultType="bookInfo">
	select outTable.* 
		from (
		select rownum rum, inTable.* 
			  from (
			  	select * 
			  	from bookInfo
			  	order by writeDate desc
			  	) inTable  
			  order by rum
			  ) outTable 
		where rum between #{startPage} and #{endPage}
	</select>
	
	<select id="getBookOne" parameterType="Integer" resultType="bookInfo">
	SELECT * FROM BOOKINFO WHERE BOOKARTICLENUM = #{bookArticleNum}
	</select>
	
	<delete id="deleteBookInfo" parameterType="Integer">
	DELETE FROM BOOKINFO WHERE BOOKARTICLENUM = #{bookArticleNum}
	</delete>
</mapper>
